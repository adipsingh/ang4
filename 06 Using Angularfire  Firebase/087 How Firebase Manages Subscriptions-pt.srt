1
00:00:02,420 --> 00:00:05,910
Na ltima palestra, reestruturamos nosso cdigo.

2
00:00:06,200 --> 00:00:14,510
Colocamos a assinatura em ngulo, fogo ou ngulo de wya ou fogo no servio de treinamento.

3
00:00:14,540 --> 00:00:20,270
Ento ns buscamos os exerccios disponveis naquele servio e configuramos este ano de assinatura no novo

4
00:00:20,270 --> 00:00:21,560
componente de treinamento.

5
00:00:21,560 --> 00:00:27,940
Ns ento apenas subscrevemos mudanas nestes exerccios de baleeira e no diretamente em fogo angular.

6
00:00:28,150 --> 00:00:33,980
Esta  apenas uma configurao possvel que remove a complexidade do nosso modelo ou do nosso

7
00:00:34,190 --> 00:00:36,670
componente e o move para o servio.

8
00:00:36,680 --> 00:00:45,110
Agora,  importante considerar uma coisa que chamamos de buscar exerccios disponveis sempre que o novo componente de

9
00:00:45,110 --> 00:00:46,710
treinamento  criado.

10
00:00:46,900 --> 00:00:51,630
E esse seria o caso sempre que navegarmos para ele, se sairmos dele.

11
00:00:51,980 --> 00:01:00,370
Ns nunca derrubamos a assinatura existente que  inicializada de fato nos exerccios disponveis que

12
00:01:00,380 --> 00:01:03,410
configuramos sempre que chamamos esse mtodo.

13
00:01:03,740 --> 00:01:07,290
Agora vamos descobrir se isso  um problema no mtodo SUBSCRIBE.

14
00:01:07,310 --> 00:01:16,400
No servio permite simplesmente consolar os exerccios de log se o seu automaticamente usando apenas uma assinatura por vez, ento ns no precisamos fazer

15
00:01:16,400 --> 00:01:21,950
a limpeza e podemos descobrir se esse  o caso pelo fato de que s

16
00:01:21,950 --> 00:01:26,800
vemos um log do console com um array de todos os exerccios.

17
00:01:26,990 --> 00:01:34,280
Se navegarmos para um novo treinamento e fizermos mais e mais exerccios sendo bloqueados,

18
00:01:34,280 --> 00:01:36,500
definitivamente precisaremos limpar manualmente.

19
00:01:36,500 --> 00:01:38,060
Ento, vamos salvar isso

20
00:01:38,060 --> 00:01:43,420
E ento vamos bloquear de volta, ento eu vou digitar alguns dados fictcios.

21
00:01:44,120 --> 00:01:47,960
E vemos um log na primeira vez que estamos aqui.

22
00:01:48,320 --> 00:01:53,810
Agora vamos para os exerccios anteriores e voltar para o novo exerccio.

23
00:01:53,990 --> 00:01:55,520
Ns no vemos muito aqui.

24
00:01:55,550 --> 00:01:55,820
Certo.

25
00:01:55,820 --> 00:01:57,760
Ento nada mudou.

26
00:01:57,950 --> 00:02:06,380
Se eu comear agora um exerccio aqui e eu voltar agora, vemos outra lei sendo impressa, mas esta  apenas

27
00:02:06,380 --> 00:02:06,650
uma.

28
00:02:06,650 --> 00:02:07,340
Tenha isso em mente.

29
00:02:07,340 --> 00:02:08,980
Ns no vimos dois aqui.

30
00:02:09,020 --> 00:02:11,100
Eu posso provar isso limpando o log.

31
00:02:11,240 --> 00:02:15,600
E novamente comeando um exerccio e voltando.

32
00:02:15,980 --> 00:02:17,590
Agora  apenas um log.

33
00:02:17,810 --> 00:02:26,780
Assim, embora tenhamos recarregado este componente e, portanto, executados exerccios disponveis, obtemos apenas

34
00:02:26,780 --> 00:02:27,890
um log.

35
00:02:27,890 --> 00:02:30,500
Ento, essa assinatura se substitui.

36
00:02:30,590 --> 00:02:32,330
No estamos poluindo a memria.

37
00:02:32,330 --> 00:02:36,200
Ns s temos um e isso  algo que voc deve ter em mente.

38
00:02:36,290 --> 00:02:40,660
Ento dessous gerido por todos ns, eu vou custar muito.

39
00:02:40,760 --> 00:02:47,210
E com esse conhecimento  gerenciado, pois podemos seguir em frente e fazer coisas como, por exemplo,

40
00:02:47,240 --> 00:02:50,680
exerccios de loja que completamos no banco de dados.

